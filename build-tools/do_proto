#!/bin/sh
#
# generate prototypes
#
tmpfile=/tmp/do_proto.$$
cproto_base="cproto -f 3 -d"
includes=
defines=-D__PROGRAM_CPROTO__
specdef=""
stub=0
source_dir="."

for opt in $*
  do
  cproto=$cproto_base
  if echo $opt | grep "\-P" > /dev/null
      then
      echo found source dir $opt
      source_dir=`echo $opt|sed s/-P//`
  else
      if echo $opt | grep "\-I" > /dev/null
	  then
	  echo found include $opt
	  includes="${includes} $opt"
      else
	  if echo $opt | grep "\-D" > /dev/null
	      then
	      echo found define $opt
	      defines="${defines} $opt"
	  else
	      if echo $opt | grep "\-K" > /dev/null
		  then
		  echo generating special include
		  specdef=`echo $opt|sed s/-K//`
		  echo special define ${specdef}
	      else
		  if echo $opt | grep "\-S" > /dev/null
		      then
		      echo generating stub declarations
		      stub=1
		      cproto="${cproto} -e"
		  else
		      echo Treating file $opt
		      sources=`grep "/\* PROTO" < $opt | sed -e 's/\/\* PROTO//g' -e 's/\*\///g'`
		      if [ "$sources" = "" ] 
			  then
			  echo no PROTO line for $opt
		      else
			  awk ' {print; } $2=="PROTO" { exit;}' > ${tmpfile} < $opt
			  
			  if [ "$specdef" != "" ]
			      then
			      echo \#ifdef ${specdef} >> ${tmpfile}
			  fi
			  
			  for source in $sources
			    do
			    if [ "$source" = "-S" ]
				then
				cproto="$cproto_base -S"
			    else
				echo +${cproto} ${defines} ${includes} ${source_dir}/$source
				${cproto} ${defines} ${includes} ${source_dir}/$source >> ${tmpfile}
			    fi
			  done
			  
			  if [ "$specdef" != "" ]
			      then
			      echo \#endif /\* ${specdef} \*/ >> ${tmpfile}
			  fi
			  
			  echo '#endif' >> ${tmpfile}
			  mv ${tmpfile} $opt
		      fi
		  fi
	      fi
	  fi
      fi
  fi
done
rm -f ${tmpfile}
exit 0
